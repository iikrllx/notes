Темы:
* Простой поиск
* Бинарный поиск
* Сортировка пузырьком
* Сортировка выбором
* Сортировка вставками
* Быстрая сортировка

Алгоритмом называется набор инструкций для выполнения некоторой задачи. В принципе, любой фрагмент
программного кода можно назвать алгоритмом.


--- Простой поиск
Отгадай число ?
1 ... мало
2 ... мало
3 ... мало
7 ... мало
9 ... много

Много шагов, алгоритм не эффективный.


--- Бинарный поиск
Принцип: ищем фамилию человека в телефонной книге, она начинается с буквы "К".
Можно начать с самого начала и перелистывать страницы, пока не доберемся до буквы "К".
Но для ускорения поиска лучше раскрыть книгу на середине.

Входные данные у бинарного поиска (отсортированный список). Возвращает индекс числа в массиве.
Постоянно высчитывает центральный элемент в определенном диапозоне и сравнивает число "x" с
центральным значением.


--- Сортировка пузырьком
Сравнивает два соседних элемента, тем самым сортирует массив. Если числа какой-то из сравниваемых
пар расположены в неправильном порядке – происходит обмен (перезапись) значений ячеек массива.
Цикл в цикле, в первом цикле `i < size` итераций, а во втором цикле `i < size - 1` итераций,
минус один нужен для того чтобы программа не смотрела за пределы массива
так как есть строки `arr[j + 1]`.


--- Сортировка выбором
Сортирует массив нахождением минимального элемента в массиве и добавлением этого элемента в начало
массива, а тот элемент, который был на месте первого элемента, ставится на место минимального
элемента, тем самым выстраивается отсортированные числа, та же логика, цикл в цикле, не стоит
забывать про `i < size - 1`, иначе в одном из циклов программа будет сравнивать числа за пределами
массива.

arr[] = 64 25 12 22 11

Find the minimum element in arr[0...4]
and place it at beginning
11 25 12 22 64

Find the minimum element in arr[1...4]
and place it at beginning of arr[1...4]
11 12 25 22 64

Find the minimum element in arr[2...4]
and place it at beginning of arr[2...4]
11 12 22 25 64

Find the minimum element in arr[3...4]
and place it at beginning of arr[3...4]
11 12 22 25 64


--- Сортировка вставками
Нужно сохранить первое значение массива в переменной и затем в следующем цикле начать сравнение этих
чисел, если же `arr[j] > key`, тогда нужно поставить на место `arr[j + 1] = arr[j]` и уменьшить
счётчик `j` для того чтобы проверить прошлое число с `key` и уменьшить счётчик еще раз при
необходимости, например 12 11 13 5 6 число 5 пройдет до 0, и станет нулевым значением.

12 11 13 5 6

12 больше 11 значит 11 ставится на место 12, а 12 на место 11

11 12 13 5 6

12 не больше 13, на место 13 ставится число 13

11 12 13 5 6

13 больше 5, значит 5 ставится на место 13
затем 12 больше 5, значит 5 ставится на место 12
затем 11 больше 5, значит 5 ставится на место 11

5 11 12 13 6

13 больше 6, значит 6 ставится на место 13
12 больше 6, значит 6 ставится на место 12
11 больше 6, значит 6 ставится на место 11
5 не больше 6


--- Быстрая сортировка
Нужно выбрать опорный элемент (любой), затем сравнить все остальные элементы с опорным и переставить
их в массиве так, чтобы разбить массив на два непрерывных отрезка элементы "меньшие" опорного и
"большие" опорного.

Затем для отрезков "меньших" и "больших" значений выполнить рекурсивно ту же последовательность
операций, если длина отрезка больше единицы.
