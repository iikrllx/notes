; db (define byte) определяется в секциях .data / .bss
; можно задать один или несколько байтов, которые будут размещены в секции
; Это может быть строка, число, символ db 123 / db 'A' / db 0x1 / db 'Hello, World!', 0
; символ ', 0' это как бы null (конец строки)
; message db 'Hello', 0
;
; equ используется для определения константы
; $ - hello (вычислит длину данных, начиная с метки `hello` и до текущего места `$`)
section .data
    hello db 'Hello, World!',0x0A   ; строка 'Hello, World!' с символом новой строки в конце
    helloLen equ $ - hello          ; вычисляем длину строки

; содержит исполняемый код
section .text
    global _start                   ; глобальный символ, который является точкой входа в программу

; как-будто функция main()
; mov rax, 1
; mov - это опкод (операционный код), инструкции, которые процессор выполняет для выполнения
; определенных задач (маленькие функции). mov - используется для перемещения (копирования)
; данных из одного место в другое. mov rax, 1 копирует значение 1 в регистр rax
; загружает число 1 в регистр rax - происходит формирование системного вызова sys_write
; регистр - это ячейка памяти внутри процессора
_start:
    ; write(1, hello, helloLen)
    mov rax, 1                      ; Системный вызов sys_write
    mov rdi, 1                      ; Файловый дескриптор 1 - стандартный вывод
    mov rsi, hello                  ; Указатель на строку для вывода
    mov rdx, helloLen               ; Длина строки
    syscall                         ; Выполнить системный вызов

    ; exit(0)
    mov rax, 60                     ; Системный вызов sys_exit
    mov rdi, 0                      ; Код возврата 0, можно еще писать xor rdi, rdi (это быстрее)
    syscall                         ; Выполнить системный вызов
