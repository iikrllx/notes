Темы:
* Типы подключения к сети
* Протокол
* Порты
* Хост
* Для чего нужны стандарты
* TCP/IP
* Инкапсуляция
* Ethernet протокол
* LAN/WAN
* Точка доступа, Коммутатор, Маршрутизатор
* Как маршрутизатор пересылает пакеты
* Конечный маршрутизатор передает пакет ПК
* IP протокол (Internet Protocol)
* ARP (Address Resolution Protocol)
* MAC (Media Access Control)
* IP адрес
* Подсеть
* ICMP (Internet Control Message Protocol)
* DHCP (Dynamic Host Configuration Protocol)
* IPP (Internet Printing Protocol)
* WPA, WPA2, WEP
* FTP, SFTP
* DNS (Domain Name System)
* HTTP
* HTTPS
* TCP vs UDP
* Выделенная линия
* Broadcast
* Multicast
* Gateway
* RFC (Request for comments)
* NTP (Network Time Protocol)
* DNS (resolv)
* Как сайты анализы IP понимают местоположение ?
* Cookie vs Cache
* RSS


--- Типы подключения к сети
* NAT
Позволяет гостевой ОС выходить в Интернет, используя при этом частный IP, который
недоступен со стороны внешней сети или же для всех машин локальной физической сети.
VirtualBox адаптеры, работающие по протоколу NAT, имеют IP-адреса в диапазоне, начинающемся
с 10.0.2.1 - 10.0.2.24. Такая гостевая "невидимая" для остальных участников.

Полезен тем, что защищает гостевую от внешних воздействий.

* Сетевой мост
Виртуальная машина работает также, как и все остальные компьютеры в сети.
Получается, что виртуальная машина находится в одной локальной сети с другими ПК.
Со стороны внешней сети имеется возможность напрямую соединиться с гостевой ОС.
Адаптер в режиме "Сетевой мост" подключается, минуя хост, к устройству, которое
распределяет IP-адреса внутри локальной сети для всех физических сетевых карт.
Как правило, адаптер в модели "Сетевой мост" получает стандартный адрес из диапазона
192.168.х.х от роутера. Поэтому виртуальная машина в сети выглядит так, как будто
это обычное физическое устройство, неотличимое от остальных.

На хосте (ПК) могут быть активными одновременно несколько сетевых устройств, например eth0 / wlan0
Поле "Имя" позволяет выбрать, какой из сетевых интерфейсов мы бы хотели использовать в качесте моста
VirtualBox

Например, хосту назначен роутером IP-адрес 192.168.0.2. Виртуальной машине в режиме "Сетевой мост"
присвоен адрес 192.168.2.6. При этом не имеет значения тот факт, что VirtualBox передает и получает
трафик как бы "сквозь" хост, минуя его. В результате получается, что виртуальная машина становится
просто еще одним компьютером в локальной сети.

Полезен тем, что дает доступ к гостевой, но система становится незащищенной.

* Виртуальный адаптер хоста
Гостевые могут взаимодействовать между собой, а также с хостом.
Использует специальное устройство vboxnet<n>
Полезно для создания частных сетей под VirtualBox для ее гостевых.
Можно использовать встроенный DHCP-сервер. Созданная сеть не имеет внешнего шлюза для выхода
в Интернет, работает как обычный сетевой коммутатор, соединяя между собой хост и гостевые системы
vboxnext<n> не имеет шлюза. vboxnet<n> динамически получает IP адрес во время сесии подключения
от DHCP-сервера. Если нужен статический адрес, нужно отключить DHCP и прописать его в ручную.

* Внутреняя сеть
Если на практике потребуется настроить взаимосвязь между несколькими гостевыми операционными
системами, работающими на одном хосте и могущими сообщаться только между собой, тогда можно
воспользоваться режимом "Внутренняя сеть". Конечно, для этой цели можно использовать режим
"Сетевой мост", но режим "Внутренняя сеть" обладает большей безопасностью. В режиме "Сетевой мост"
все пакеты отправляются и получаются через адаптер физической сети, установленный на машине-хосте.

В этом случае весь трафик может быть перехвачен (например, путем установки сниффера пакетов на
машине-хосте). С хоста такие гостевые машины не будут видны. Получается частная локальная сеть,
без выхода в Интернет Для этого используется "программный интерфейс". Максимально безопасно.


--- Протокол
Набор правил, по которым взаимодействуют компьютеры между собой.
Компьютерные протоколы помогают зафиксировать: какие данные и в каком формате передаются.
Каждый протокол определяет правила выполнения конкретных задач.

Например, протокол HTTP (передает текст)
Разные протоколы зачастую описывают лишь разные стороны одного типа связи.


--- Порты
Бывают открытые порты и закрытые.
Используется для определения процесса сервиса, порт - протокол.
Например:
* 80       HTTP
* 443      HTTPS
* 20 - 21  FTP
* 22       SSH


--- Хост
Любое устройство, которое имеет IP адрес и подключено к любой сети TCP / IP.


--- Для чего нужны стандарты
Стандарты нужны для того чтобы обойти такие проблемы как:
* Несовместимость сетевого оборудования
* Несовместимость ПО
* Разные протоколы

Например, ПК IBM могли работать (общаться) только с ПК IBM, что не очень хорошо.


--- TCP/IP
Модель в которой за основу взяты протоколы TCP и IP
Модель OSI больше не используется на практике.
Подробное описание протоколов находится в документах RFC

Верхние уровни сосредоточены на приложениях, которые передают и получают данные.
Нижние на передаче битов по каналу связи (более физические)


* Прикладной
TELNET / DNS / HTTP / POP3 / SMTP / FTP
Данный уровень обслуживают прикладные программы.

Через веб-браузер происходят запросы, браузер говорит (клиент)
GET home.html
Сервер
OK home.html (содержимое файла home.html)


* Транспортный уровень (сегмент)
TCP / UDP

Данные протоколы предоставляют службы протоколам уровня "Приложений". Механизм TCP предоставляет
поток данных с предварительной установкой соединения, осуществляет повторный запрос данных в случае
потери данных и устраняет дублирование при получении двух копий одного пакета, гарантируя тем самым
(в отличие от UDP) целостность передаваемых данных и уведомление отправителя о результатах передачи.

Например, протокол HTTP ожидает восстановления после ошибки. Он просит об этом протокол TCP и данный
протокол предоставляет службу протоколу HTTP


* Сетевой (пакет)
IP - IPv4, IPv6 / ICMP / DHCP / ARP / IPP / NTP

Решает проблему:
Как передавать эти сообщения между компьютерами, которые подключены ненапрямую.

Отвечает за перенаправление пакетов IP с хоста отправителя на хост получателя.
Предоставляет - адресация, маршрутизация. Хитрость заключается в установке нескольких
компьютеров, называемых маршрутизаторами (или роутерами), с несколькими сетевыми интерфейсами.

Специальные компьютеры, называемые маршрутизаторам и, способны объединять разные сети в более
крупные, такие как интернет.

Нижние уровни модели TCP / IP выступают в роли почтовой службы. Для этого нижние уровни должны
понимать основы физической сети, поскольку они должны выбрать как лучше доставить данные с одного
хоста на другой. Протокол IP работает по принципу почтовой службы и определяет адреса для каждого
компьютера в сети, каждый хост должен иметь собственный уникальный IP (для идентификации)

На сетевом уровне происходит выбор наилучшего маршрута и пересылка пакета, которую выполняют
маршрутизаторы. Определяются две версии IP, это IPv4 и IPv6, пока что в мире используется IPv4.

Маршрутизатор - роутер, сетевое устройство, соединяющее вместе части сети TCP / IP в целях
маршрутизации (пересылки) пакетов IP соответствующему пользователю.

Пример: ПК-А хочет послать пакет ПК-Б. ПК-А посылает пакет некоему маршритузатору (ближайшему
маршрутизатору в той же сети LAN), рассчитывая, что он знает, как переслать пакет дальше (кидаем
письмо в ближайщий ящик). Затем маршрутизатор R1 получает пакет IP и его процесс принимает решение.
R1 исследует адрес получателя, сравнивая его с известными ему маршрутами IP, и решает переслать
пакет R2 Этот процесс пересылки называется маршрутизацией IP. Затем R2 следует той же логике, что и
R1 и решает переслать пакет уже получателю.


* Канальный (доступ к сети, фрейм)
Wi-Fi, Ethernet, Point-to-point (PPP), DSL, MAC

Общается с другим ПК на прямую, через Ethernet. Делит передаваемые данные на "кадры" и постепенно
их передает.

На канальном уровне компьютеры идентифицируются по физическому адресу. Физические адреса однозначно
идентифицируют компьютеры, но не дают никаких подсказок о том‚ где именно компьютер подключен и как
до него добраться.

Точно так же как и любой другой уровень в сетевой модели, канальный предоставляет службы вышестоящим
уровням. Когда процесс решает послать пакет другому хосту-маршрутизатору, он использует возможности
уровня канала связи.

Пример: Сервер-А хочет послать данные маршрутизатору R1. Сервер-A инкапсулирует пакет IP, создавая
фрейм (фрагмент данных канального уровня). Сервер-А физически передает биты этого фрейма, используя
электрический ток в кабеле Ethernet. R1 физически получает электрический сигнал по кабелю и
восстанавливает те же биты. R1 деинкапсулирует пакет IP из фрейма.


--- Инкапсуляция
Каждый протокол добавляет собственный заголовок. Инкапсуляция описывает процесс добавления заголовка
к некоторому блоку данных. А деинкапсуляция, наоборот отбрасывает эти заголовки (восстанавливает
биты). Например, протокол HTTP инкапсулирует веб-страницу в заголовок HTTP. Далее протокол TCP
инкапсулирует данные и заголовок протокола HTTP в собственный заголовок, а протокол IP инкапсулирует
всё вместе в свой заголовок IP. В итоге блок данных от уровня Интернета (IP) инкапсулируется в
заголовок протокола канального уровня Ethernet.

Этап 1
Создание и инкапсуляция данных уровня приложений в заголовки, Например, HTTP OK может помещено в
HTTP заголовок

Этап 2
Инкапсуляция от уровня "Приложений" к уровню транспортному - TCP / UDP

Этап 3
Инкапсуляция блока данных от транспортного в заголовок сетевого уровня (заголовок IP) Протокол IP
определяет IP адреса

Этап 4
Инкапсуляция блока данных от сетевого уровня в заголовок канального уровня

Этап 5
Передача битов. На физическом уровне информация кодируется в специальный сигнал, который зависит от
среды и технологии передачи фреймов

Важно обратить внимание на термины, сегмент, пакет, фрейм. Каждый из терминов описивает
инкапсуляцию данных на соответствующем уровне, то есть добавление заголовка нужного уровня.

Сегмент (транспортный)
Пакет (сетевой)
Фрейм (канальный)


--- Ethernet протокол
Это стандарт (протокол), который относится только к LAN. Именно локальная сеть - один из
идентификаторов наличия Ethernet. Физический уровень. Физическая передача и формирование кадров
(фреймов) внутри LAN. Ethernet относится только к проводным сетям. Скорость и передача данных, для
офиса идеальный вариант Адресация в Ethernet происходит по средствам MAC адреса. В последнее время
эта технология подходит и для WAN (кабели длиной 5КМ).


--- LAN/WAN
Локальные сети, как правило, соединяют соседние устройства (в том же здании, в той же комнате).
Глобальные сети, соединяют устройства, которые расположены далеко друг от друга. Совместно локальные
и глобальные сети создают интернет, который соединяет устройства в сети. За локальную сеть
приходится платить самому, а за глобальные сети сдаются в аренду. Для локальной сети нужно купить
кабели и коммутаторы, а затем установить их в помещении и настроить. Глобальные сети физически
проложены по собственности других людей, где мы не имеем право протянуть свои кабели и устройства.
Этим, как правило занимаются компании, которые ставят свои устройства и кабели, а затем
предоставляют право за плату передавать данные по своим сетям. Например, мы настроили LAN в своем
офисе, затем нам нужна связь с миром, для этого нужен WAN, который занимается передачей данных между
двумя маршрутизаторами. Выделенная линия WAN обеспечивает обмен данными между любыми
маршрутизаторами на расстоянии десятков, сотен, тысяч КМ WAN -> передача данных между локальными
сетями. Выделенная линия или арендованная, компания, которая использует такую линию не владеет
каналом, а вносит ежемесячную арендную плату за его использование (провайдер - ISP(internet service
provider)) Кабельная проводка WAN происходит под землей. Выделенные линии предоставляют ряд
скоростей передачи данных, клиенту необходимо выбрать.

Практически любой другой город на Земле на прямую или опосредованно связан с этими прибрежными
городами, часто с помощью кабелей, проложенных на земле. Спутники связи также имеют маршрутизаторы
для установления беспроводных соединений с удаленными точками. Все маршрутизаторы могут пересылать
сообщения, поэтому сообщение, которое вы отправляете в интернете, можно направить на любой другой
компьютер в интернете. Но только в том случае, если путь к нему может быть найден.

Выделенные линии подключены к маршрутизаторам, а маршрутизаторы сосредоточены на доставке пакетов
хосту получателя. Физически маршрутизаторы подключены и к локальным, и к глобальным сетям.

Например: ПК-А -> ПК-Б. Логика сетевого уровня IP ПК-A требует посылать пакет на соседний
маршрутизатор R1. Логика сетевого уровня R1 требует перенаправить пакет на выделенную линию R2.
Логика R2 сетевого уровня требует перенаправить пакет по каналам связи LAN на ПК-Б. Чтобы фактически
переместить биты пакеты, ПК и маршрутизаторы должны полагаться на логику сетевого уровня, локальные
и глобальные сети.

Среди LAN популярны:
* Локальные сети Ethernet (проводные) Необходим коммутатор (switch) предоставляющий несколько
физических портов для подключения кабелей Ethernet. Например, различные ПК в доме, подключены
к коммутатору, а коммутатор подключен к маршрутизатору (роутеру), который смотрит в WAN. Сейчас
коммутатор уже не нужен, ведь современные роутеры считаются и маршрутизаторами и комматуторами
в одном.

* Беспроводные локальные сети (wi-fi - радиоволны)
Точка доступа (устройство) -> Коммутатор -> Маршрутизатор


--- Точка доступа, Коммутатор, Маршрутизатор
Точка доступа - беспроводная базовая станция, обеспечивает беспроводной доступ к уже существующей
сети.

Коммутатор (switch) - соединяет несколько устройств через Ethernet кабель в пределах одного сегмента
сети.

Маршрутизатор - устройство, которое пересылает пакеты между различными сегментами сети на основе
правил таблицы маршрутизации.

Сейчас эти три устройства включены в один современный роутер.

Локальная сеть состоит из точек доступа, коммутаторов, а маршрутизатор подключен к LAN и WAN.


--- Как маршрутизатор пересылает пакеты
Каждый маршрутизатор хранит таблицу маршрутизации IP. Эта таблица содержит группировки IP-адресов,
и известный также как сети IP и подсети IP. Когда маршрутизатор получает пакет, он сравнивает
IP-адрес получателя пакета с записями в таблице маршрутизации и находит соответствие.
Найденная запись содержит список направлений, указывающих маршрутизатору, куда перенаправить пакет
далее.


--- Конечный маршрутизатор передает пакет ПК
Когда пакет проходит всю цепочку маршрутизаторов, конечный маршрутизатор использует протокол ARP
(протокол преобразования адресов). Конечный маршрутизатор использует протокол ARP для выяснения
MAC-адреса ПК, прежде чем посылать на него любые пакеты.


--- IP протокол (Internet Protocol)
IP - протокол, который отвечает за адресацию: чтобы нужные данные долетели до нужного компьютера.
Его основная задача - логически соединить компьютеры между собой, чтобы можно было отправлять данные
от одного к другому.


--- ARP (Addres Resolution Protocol)
Протокол в компьютерных сетях, предназначенный для определения MAC-адреса другого компьютера по
известному IP-адресу. Задает вопрос, если это ваш IP, подскажите ваш MAC-адрес. Без этого протокола
не будет связи между IP и MAC, что ломает логику доставки пакетов. В глобальной сети нет MAC
адресов, есть только IP, поэтому используется ARP, чтобы связать глобальную сеть с локальной (MAC и
IP)

Преобразует сетевые адреса в физические.


--- MAC (Media Access Control)
Физический адрес.
MAC адрес это вместо имени в сети.

Уникальный номер сетевого оборудования (используется только в локальных сетях) Этот номер
используется для идентификации отправителя и получателя фрейма. MAC адрес формирует основу сетей на
канальном уровне.

Перед тем как отправлять пакеты на другой узел, машина должна узнать физический адрес получателя.
Когда MAC адрес получен, он будет занесен в таблицу и только после этого будут отправляться IP
пакеты, MAC адрес присваивается на заводах производителя и вшит в сетевую карту.

Производители сетевых интерфейсов по всему миру должны согласовывать свои действия, дабы избежать
случайного присвоения одного и того же адреса двум разным устройствам. В этом они полагаются на
Институт инженеров по электротехнике и электронике (IEEE), который назначает каждому из них свой
диапазон MAC адресов. По MAC адресу можно узнать производителя, например Apple начинает с
фиксированных hex чисел свой MAC.

20:4e:f6:41:79:ab
Первые три байта относятся к производителю сетевого оборудования.
Следующие три байта относятся к самому оборудованию.


--- IP адрес
Сетевой адрес.

IP-адрес представлен 4 десятичными числами, представленными в интервале от 0 до 255. Эти числа
разделены точками. Если у двух IP-адресов одинаковый номер сети, значит, устройства с этими адресами
могут общаться напрямую. Если нет - им понадобится устройство посредник, роутер или маршрутизатор,
расположенный где-то в структуре сети.

IP-адреса состоят из 32-разрядного числа, обычного записанного в десятичном представлении с
разделительными точками. Например, число 168.1.1.1, его двоичная версия такова:
10101000 00000001 00000001 00000001 - 8 бит, 8 бит, 8 бит, 8 бит

IPv4 - 32 бит
IPv6 - 124 бит

Статический - это постоянный адрес.
Динамический - это адрес, который меняется постоянно, после каждой авторизации в интернет.

* Внешний IP адрес (белый), который виден всему интернету, публичный или глобальный.
Формируется постоянно заново от одного подключения к другому, нельзя изменить. Но можно запросить
у провайдера постоянный IP адрес.

* Локальный (серый)
Создается роутером, работает только в пределах локальной сети, можно изменить. Приватный, скрытый
адрес.

* Внутренний адрес
Нужен для того чтобы программы в ОС могли взаимодействовать между собой в пределах этого ПК.
Например, так браузер может получить доступ к локальному веб-серверу с помощью IP. Его идентификатор
всегда одинаковый 127.0.0.1. Используется только для внутренних коммуникаций. 127.0.0.1
соответствует интерфейсу lo (возвратная петля)


--- Подсеть
Это соединенная группа хостов, IP-адреса которых каким-либо образом упорядочены.
Подсеть определяется с помощью двух фрагментов, сетевого префикса IP и маски подсети.
192.168.1.0/24 - первые 24 бита зарезервированы под адрес сети, а оставшиеся 8 под хосты.

Например, 172.16.0.0/24
Эта сеть довольно большая, она начинается с 172.16.0.0 и заканчивается 172.16.0.255
Маска подсети /24 резервирует 254 IP адресов

172.16.1.160 - подсеть 172.16.1, адрес хоста 160

Например, мы очень хотим обедать, зашли в ресторан, где есть огромный бутерброд (довольно длинный),
мы берем его, но понимаем, что это слишком много для нас одного, поэтому делимся с другими людьми,
которые тоже хотят пообедать. Это принцип подсетей.

Хосты с IP-адресами 192.168.39.1 и 192.168.31.200 находятся в разных подсетях. Чтобы хост из
подсети 192.168.39.0/24 мог взаимодействовать с хостом из подсети 192.168.31.0/24, необходимо
наличие маршрутизатора, который будет перенаправлять трафик между этими подсетями. Если между
подсетями нет маршрутизатора или если правила маршрутизации не настроены должным образом, то эти два
хоста не смогут взаимодействовать друг с другом. Подсети разделены для изоляции трафика и управления
адресным пространством. Хосты в разных подсетях не могут напрямую общаться друг с другом без
маршрутизатора, который перенаправляет трафик между этими подсетями.


--- ICMP (Internet Control Message Protocol)
Echo Reqeust (TCP/IP).
Протокол межсетевых управляющих сообщений, сетевой протокол, входит в стек TCP/IP. Используется для
передачи ошибок. (услуга недоступна и хост / маршрутизатор не отвечает) и других функций.
Информационные сообщения можно увидеть в `ping`, `traceroute`.


--- DHCP (Dynamic Host Configuration Protocol)
Сетевой протокол, позволяющий сетевым устройствам автоматически получать IP-адрес и IP будет
закреплен за клиентскими устройствами. Кроме того, администратор может задавать время, на протяжении
которого IP-адрес будет закреплен за клиентским MAC. По истечении этого времени IP может занять
другое сетевое устройство.


--- IPP (Internet Printing Protocol)
Сетевая печать, управление печатью. Протокол межсетевой печати, протокол печати через Интернет.
Например, чтобы получить информацию о принтере и его настройке в web интерфейсе можно
http://10.77.110.89/ -> ввести его URL и подключиться к нему. Используется 631 порт.


--- WPA, WPA2, WEP
Это всё способы шифрования, которые обеспечивают безопасность Wi-Fi сети. WPA / WPA2 пришли на
замену WEP и существуют для защиты беспроводных сетей. Взломать WPA2 намного сложнее чем WEP.


--- FTP, SFTP
Протокол передачи файлов, SFTP это защищенная версия FTP протокола, то есть безопасный обмен данных.


--- DNS (Domain Name System)
Это система доменных имен, связывает название домена и IP адреса ПК. Для того чтобы пользователям не
нужно было запоминать IP адрес другого клиента, придумали систему доменных имен, для более ясного
понимания. Например, google.com Здесь реализуется связь между IP адресом сервера и его доменом.
То есть когда мы вписываем в поисковую систему google.com система доменных имен сообщит браузеру
его IP адрес и данный ресурс найдется.

DNS сервера - это книга контактов интернета. DNS сервер - это ПК, который хранит IP-адреса сайтов.
В интернете много серверов, они есть у каждого провайдера и обслуживают их пользователей.
Основное предназначение DNS-серверов - хранение информации о доменах и ее предоставление по запросу
пользователей.

Например, 8.8.8.8 это DNS сервер Google, у пользователя могут не открываться некоторые сайты Google,
если он пропишет этот DNS, сайты начнут открываться.


--- HTTP
Данный протокол описывает взаимодействие двух ПК -> клиент и сервер. Построенное данное
взаимодействие на базе сообщений: запрос (Request) и ответ (Response) Каждое сообщение состоит из
трех частей:

Каждое HTTP соединение состоит из трех частей, которые передаются в указанном порядке:
* Стартовая строка -> METHOD URL HTTP/VERSION
* Заголовки -> тело сообщения, сведения, пара ключ:значение, служебная информация
* Тело сообщения -> данные сообщения - HTML страница

Заголовки - это набор пар имя-значение, разделенных двоеточием, передается служебная информация:
кодировка сообщений, название и версия браузера, адрес с которого пришел клиент и т.д.

Пример заголовков:
Host: example.com
User-Agent: Mozilla/5.0 (X11; U; Linux i686; ru; rv:1.9b5) Gecko/2008050509 Firefox/3.0b5
Accept: text/html
Connection: close

Полный пример HTTP ответа выглядит так
HTTP/1.0 200 OK
Server: nginx/0.6.31
Content-Language: ru
Content-Type: text/html; charset=utf-8
Content-Length: 1234
Connection: close
... САМА HTML-СТРАНИЦА ...

Методы HTTP. Они указывают на основную операцию над ресурсом
* GET
* POST


--- HTTPS
Работает с помощью SSL/TLS сертификата. Он выдается специальной организацией - центром
сертификации, информацию о которой можно посмотреть прямо в браузере.

Работа HTTPS заключается в проверке сертификата. Проверка подлинности сертификата - первое, что
делает браузер при установке безопасного HTTPS-соединения.

Информация зашифровывается и передается только на тот сервер, который может ее расшифровать. Это
означает, что злоумышленники, перехватывающие вашу информацию, не смогут ее прочитать. Цифровые
сертификаты помогают убедиться, что информация отправляется именно к тому, кому она предназначена,
и что она не была изменена в процессе передачи.


--- TCP vs UDP
На удаленных компьютерах размещены приложения, которым нужно обмениваться данными. Благодаря таким
протоколам, как UDP и TCP, полезные данные, выраженные в виде дейтаграмм или сегментов, могут
формировать потоки данных между удаленными приложениями.

Меньшее кол-во служб позволяет протоколу UDP использовать меньше байтов в заголовке, чем протоколу
TCP, что приводит к уменьшению служебной нагрузки в сети. Программное обеспечение протокола UDP не
вызывает замедления передачи данных в тех случаях, когда работа TCP целенаправленно замедляется.

Мультиплексирование в протоколах TCP / UDP включает в себя процесс принятия решения компьютером при
получении данных. Возможны ситуации, когда на компьютере работает несколько приложений, браузер,
почта и т.д И ПК, который получает данные, должен принять решение какому из работающих приложений
следует передать полученные данные (это делается засчет мультиплексирования)

Например, ПК-Б пришли пакеты данных, с одним и тем же IP и MAC (но по разным портам) и данный ПК,
понимает какое приложение получатель данных благодаря порту (они разные). В заголовке TCP будет
номер порта.

Мультиплексирование базируется на понятии сокета (socket)
Сокет состоит из:
* IP-адрес
* Транспортный протокол (TCP / UDP)
* Номер порта

Веб-сервер, который принимает от клиентов запросы, сокет будет иметь вид (10.1.1.2, TCP, порт 80)
При подключении клиента к веб-серверу, сокет будет иметь вид (10.1.1.1, TCP, 1030)
Почему 1030 порт ? Просто потому что ПК клиента требует уникальный порт, а поскольку порт 1030
свободен, используется он (и так на всех клиентских машинах, а на серверах используются
общеизвестные порты)

Когда ПК использует несколько приложений одновременно, следовательно, при этом открыты несколько
сокетов. Поскольку сокет на каждом отдельном ПК должен быть уникальным. Эта уникальность означает,
что можно использовать несколько приложений одновременно, обращаясь к приложениям, работающим на том
же ПК. Мультиплексирование на базе сокетов обеспечивает доставку данных требуемым приложениям.
Общеизвестные номера портов используются серверами, остальные номера портов используются клиентами.

Например, 100 браузеров на том же клиенте могут иметь каждый свое соединение с одним и тем же
веб-сервером, веб-сервер с подсоединенными к нему 100 клиентами будет использовать только один сокет
и, соответственно, только один номер порта 80, сервер может отличить пакеты любого из 100 клиентов
друг от друга, просматривая порт отправителя в полученных сегментах TCP Этот же метод нумерации
портов относится и к протоколу UDP.

TCP относится к: Протокол с установлением соединения. Протокол, которому перед началом передачи
данных необходим обмен сообщениями между устройствами.

UDP относится к: Протокол без установления соединения. Протокол, которому не требуется обмен
сообщениями между устройствами и заранее установленной связи между конечными точками.

Например, UDP используется для NFS / DNS Например, когда клиент запрашивает у веб-сервера страницу
по HTTP, TCP обеспечивает восстановление после ошибок, гарантируя доставку данных.


--- Выделенная линия
Понятие довольно условное, под ним мы понимаем не только отдельный телефонный кабель, должным
образом скоммутированный для постоянного доступа во внешнюю сеть, но подключение через специально
протянутый оптический кабель, а также посредством радиоканала (Wi Fi). Выделенная линия
предназначена только для подключения к интернету, поэтому обеспечивают высокую скорость
соединения и обмена данными.

Говоря простыми словами, выделяют интернет-канал к офису, дому (прокладывают) и устройство
связывается с этим кабелем, для выхода в интернет.


--- Broadcast
Широковещательный канал, поток данных (каждый переданный пакет в случае пакетной передачи)
предназначен для приема всеми участниками сети. Пакет посланный по этому адресу
получат все хостовые в локальной сети. Чтобы указать broadcast нужно взять IP, и в последнем
указать 255 -> 192.168.32.255

Предположим, что в сети есть принтер, который должен быть доступен для всех компьютеров в офисе.
Системный администратор может настроить принтер так, чтобы он прослушивал широковещательные
сообщения на адресе 192.168.1.255 (если сеть имеет маску подсети 255.255.255.0). Когда пользователь
хочет напечатать документ, его компьютер отправляет запрос на печать на широковещательный адрес.
Принтер получает сообщение и выполняет задачу печати.

Таким образом, не нужно на каждом компьютере настраивать IP-адрес принтера, достаточно отправить
сообщение на общий широковещательный адрес, и все устройства в сети, в том числе принтер, получат
этот запрос.


--- Multicast
Форма широковещания, при которой адресом назначения сетевого пакета является мультикастная группа,
например, рассылка почты, видеоконференцсвязь.


--- Gateway
Шлюз, также известный как маршрут по умолчанию, необходим, чтобы отправить пакет из локальной сети.
Если сетевая часть адреса получателя пакета отличается от сети узла-отправителя, пакет должен быть
направлен за пределы исходной сети. Для этого пакет отправляются шлюзу. Обычно шлюз это IP адрес
нашего домашнего маршрутизатора. В роли шлюза часто выбирают номер 1, например 192.168.32.1


--- Netmask
Маска сети - это 32 разрядная маска, используемая для разделения IP-адреса на подсети и указания
доступных сетевых узлов. Маска подсети определяет насколько велика сеть.

-----------------------------------------------------------------------------------
192.168.55.161  255.255.255.255 (маска 32)  -> 192.168.55.161
                8 16 24 32

11111111 11111111 11111111 11111111
число хостов 1, 192.168.55.161 адрес сети, 192.168.55.161 еще и широковещательный IP,
в этой сети нет места для других хостов
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
192.168.55.0  255.255.255.0 (маска 24)  -> 192.168.55.0 - 192.168.55.255
              8 16 24 0

11111111 11111111 11111111 00000000
число хостов 254, 192.168.55.0 адрес сети, 192.168.55.1 первый хост,
192.168.55.254 последний хост, 192.168.55.255 широковещательный IP
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
192.168.0.0  255.255.0.0 (маска 16)  -> 192.168.0.0 - 192.168.255.255
             8 16 0 0

11111111 11111111 00000000 00000000
число хостов 65534, 192.168.0.0 адрес сети, 192.168.0.1 первый хост,
192.168.255.254 последний хост, 192.168.255.255 широковещательный IP

192.168.0 - подсеть
192.168.1 - другая подсеть
в каждой может быть по 254 хостов
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
192.168.55.240  255.255.255.240 (маска 28)  -> 192.168.55.240 - 192.168.55.255
                8 16 24 28

11111111 11111111 11111111 11110000
число хостов 16, 192.168.55.240 адрес сети, 192.168.55.241 первый хост,
192.168.55.254 последний хост, 192.168.55.255
эти хосты работают в одной подсети
-----------------------------------------------------------------------------------

Шлюз сети можно узнать: `ip r | grep "default"`
Пример моей сети: 192.168.50.0/24
Адрес сети 192.168.50.0
Шлюз 192.168.50.1 (LAN IP)
Первый хост 192.168.50.2
Последний хост 192.168.50.254
Широковещательный канал 192.168.50.255
1 подсеть 192.168.50
и 254 хостов в ней, которые могут общаться между собой.


--- RFC (Request for comments)
Тема для обсуждения. Документ из серии пронумерованных информационных документов Интернета,
содержащих технические спецификации и стандарты, широко применяемые во всемирной сети.


--- NTP (Network Time Protocol)
Протокол сетевого времени. Протокол для синхронизации внутренних часов компьютера с использованием
сетей. Если устройств много, то в настройке точного времени поможет NTP Это лучше чем настраивать
самому вручную десятки виртуальных машин (например).


--- DNS (resolv)
На debian поставить resolvconf.
Запустить resolvconf.service, так же включить enable.

127.0.0.53 - это systemd-resolved.
Выключить systemd-resolved.service

Прописать в `/etc/resolvconf/resolv.conf.d/head` необходимый DNS-сервер.
Например: nameserver 94.140.15.16
И сделать `reboot`.

Может помочь при пустом resolv.conf.
$ resolvconf -u

Кол-во nameserver может быть до 3, больше он не принимает.
Лучше указывать несколько, если вдруг первый выйдет из строя, поможет второй

Почему в `/etc/resolv.conf` указан nameserver в виде 192.168.32.1 ?
Ведь 192.168.32.1 это шлюз.

Возможно, шлюз 192.168.32.1 также выступает в роли DNS-сервера для локальной сети. Таким образом,
все запросы на разрешение доменных имен сначала направляются на шлюз, который либо сам обрабатывает
их, либо перенаправляет на внешний DNS-сервер. Это довольно распространённая практика в небольших
сетях, где шлюз выполняет множество функций, включая маршрутизацию, файервол и DNS.


--- Как сайты анализы IP понимают местоположение ?
Сайты анализа IP адресов используют базы данных геолокации, которые сопоставляют IP-адреса с их
физическим местоположением. Эти базы данных содержат информацию, собранную от различных поставщиков
и организаций, и обновляются регулярно для обеспечения точности данных.

Когда вы посещаете сайт для анализа IP-адреса, он автоматически определяет ваш публичный IP-адрес и
ищет его в этих базах данных. Если ваш IP-адрес зарегистрирован как находящийся в Москве, сайт и
покажет, что вы находитесь в Москве. Это определение может быть не всегда абсолютно точным и зависит
от качества и актуальности информации в базе данных геолокации.


--- Cookie vs Cache
Cookie файлы содержат данные, сформированные сервером в Интернете и сохраненные на ПК пользователя.
Файл (обычно размером не более 1кб) с этими данными браузер каждый раз пересылает на сервер при
попытке пользователя открыть страницу соответствующего сайта. В этом файле хранятся данные
пользователя, компьютера, введенные данные, данные сессии, местоположение и т.д. Без cookie-файлов
не смогут правильно функционировать многие крупные сайты, например интернет магазины. Можно это
отключить, но тогда многие сайты работать не будут. Иногда необходимо чистить куки, которые накопил
браузер.

Разница между cookie и cache. Кэш хранит содержимое веб-сайта только на ПК пользователя, а файлы
куки хранят свое содержимое как на сервере, так и в браузере пользователя. Кэш удаляется вручную.


--- RSS
Rich Site Summary (обогащенная сводка сайта) Специальные форматы, предназначенные для описания лент
новостей, анонсов статей, изменений в блогах и прочее. Информация из различных источников,
представленная в формате RSS, может быть собрана, обработана и представлена пользователю в удобном
для него виде.

Существуют специальные xml файлы (rss feed), которые можно подключать в почтовом клиенте, это
некая подписка на нужные новости.
