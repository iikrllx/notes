Темы:
* Подпись пакета (общая информация)
* Как подписать пакет
* Разбор команды gpg --list-keys
* Как выложить пакет на mentors.debian.org (dput)
* apt-rdepends
* Транзитивные зависимости
* pristine-tar
* BTS (submit@bugs.debian.org)
* BTS (0000000@bugs.debian.org)
* Шаблон письма при отправке патчей/изменений
* Процесс загрузки пакета в архив
* Разбор Debian ссылок
* Что такое Copyright
* Что такое Copyleft


--- Подпись пакета (общая информация)
`debsign` используется для подписания Debian пакета с помощью GPG (GNU Privacy
Guard). Подписание пакета является важной частью процесса создания и выпуска
пакетов, так как оно подтверждает подлинность и целостность пакета. Вот
несколько ключевых моментов, когда следует использовать `debsign`:

1. Перед выпуском пакета в архив: Это один из основных случаев, когда нужно
использовать `debsign`. Перед тем как отправить пакет в официальный архив
Debian или в какое-либо другое хранилище пакетов, необходимо подписать его,
чтобы другие пользователи могли убедиться в его подлинности.

2. Когда вы распространяете пакет через другие каналы: Если вы распространяете
пакет через сторонние репозитории, веб-сайты или другие каналы, также
рекомендуется подписывать его. Это помогает пользователям убедиться, что пакет
действительно был создан вами и не был изменен.

3. При внутреннем использовании: Если вы разрабатываете пакеты для внутреннего
использования в компании или организации, также стоит подписывать их. Это
обеспечивает дополнительный уровень безопасности и уверенность в том, что пакеты
не были изменены с момента их создания.

Подписание пакета с помощью `debsign` обычно выполняется на этапе завершения
сборки пакета, после того как вы создали все необходимые файлы (.dsc, .changes,
.deb и т.д.). Команда `debsign` подписывает файлы `.dsc` и `.changes`, добавляя
цифровую подпись, которая затем может быть проверена с помощью GPG.

Пример использования `debsign`:
$ debsign пакет_1.0-1_amd64.changes
Подпишет `.changes` и `.dsc`.

Таким образом, подписание пакета с помощью `debsign` является важным шагом в
процессе создания и распространения Debian пакетов, обеспечивая их подлинность и
целостность.

Если вы изменили пакет, включая его содержимое или исходные файлы, вам нужно
подписать пакет своей подписью. (!!!)


--- Как подписать пакет
GPG это инструмент по-умолчанию для Debian пакетов. Другие лучше не
использовать.

Создать новый ключ:
$ gpg --full-generate-key
Ответы по-умолчанию, но длина должна быть максимальной.

Вывести все ключи:
$ gpg --list-keys

Подписать пакет:
$ debsign <file>.changes

Проверка подписи:
$ gpg --verify <file>.changes
$ gpg --verify <file>.dsc

Также можно открыть подписанные файлы `.dsc` и `.changes` в текстовом редакторе
и убедиться, что в них присутствует блок `BEGIN PGP SIGNATURE` в конце файла.
Этот блок содержит саму подпись.


--- Разбор команды gpg --list-keys
Вывод:

/home/<user>/.gnupg/pubring.kbx
-----------------------------
pub   rsa4096 2024-11-28 [SC]
      ABCDEF1234567890FEDCBA0987654321ABCDEF12
uid           [ultimate] Ivan Ivanov <example@gmail.com>
sub   rsa4096 2024-11-28 [E]

Разбор:

1. Хранятся публичные ключи: /home/<user>/.gnupg/pubring.kbx

2. Здесь описан публичный ключ, алгоритм ключа, дату окончания действия ключа:
pub   rsa4096 2024-11-28 [SC]
      ABCDEF1234567890FEDCBA0987654321ABCDEF12

Это отпечаток (fingerprint) ключа, который используется для его уникальной
идентификации. ABCDEF1234567890FEDCBA0987654321ABCDEF12

3. uid [ultimate] Ivan Ivanod <example@gmail.com>: это идентификатор
пользователя, связанный с ключом. Он содержит уровень доверия
('ultimate' означает, что вы полностью доверяете этому ключу),
имя владельца и его адрес электронной почты.

4. Подчиненный ключ.

`key-id` обычно состоит из последних 8 символов длинного ключа (`fingerprint`).
В данном случае вот: ABCDEF12


--- Как выложить пакет на mentors.debian.org (dput)
`dput` — это утилита, используемая для загрузки пакетов в репозитории Debian или
Ubuntu. Она особенно полезна для разработчиков, которые хотят поделиться своими
программами или библиотеками в формате пакетов Debian (.deb) через официальные
или персональные репозитории.

1. Перед загрузкой пакета, нужно в `debian/changelog` исправить:
UNRELEASED -> unstable

2. Подписать свой пакет с помощью `debsign`.

3. Настроить ~/.dput.cf
[mentors]
fqdn = mentors.debian.net
incoming = /upload
method = https
allow_unsigned_uploads = 0
progress_indicator = 2
# Allow uploads for UNRELEASED packages
allowed_distributions = .*

4. Выполнить:
$ dput mentors <file>.changes

Чтобы выложить новую версию пакета, нужно выполнить:
$ dch
и поднять версию, затем повторить те же действия.


--- apt-rdepends
Работа с Depends пакета.
$ apt-get install -y apt-rdepends

Вывести все зависимости пакета:
$ apt-rdepends <package>

Отобразить пакеты, которые зависят от указанного пакета (обратные зависимости):
$ apt-rdepends -r <package>

Показывает статусы зависимостей (установлен/не установлен):
$ apt-rdepends -p <package>

Вывести все зависимости пакета в виде графа:
$ apt-rdepends -d <package>

Вывести сборочные зависимости пакета:
$ apt-rdepends -b <package>


--- Транзитивные зависимости
Это зависимости, которые возникают не напрямую от пакета, который вы
устанавливаете, а от его зависимостей. Проще говоря, это зависимости
зависимостей.

Например, предположим, что у вас есть пакет A, который зависит от пакета B,
и пакет B, в свою очередь, зависит от пакета C. В этом случае:

- Пакет B является прямой зависимостью пакета A.
- Пакет C является транзитивной зависимостью пакета A, потому что он необходим
  для работы пакета B, который, в свою очередь, необходим для работы пакета A.

Когда вы используете `apt-rdepends`, чтобы увидеть зависимости пакета, он
покажет вам как прямые, так и транзитивные зависимости, предоставляя полное
дерево зависимостей для данного пакета. Это особенно полезно для понимания
полной цепочки зависимостей, которые будут установлены вместе с целевым пакетом.


--- pristine-tar
pristine-tar - это утилита, используемая в системах управления пакетами,
особенно в контексте Debian, для восстановления точной копии оригинального
архива исходного кода, как он был загружен от поставщика. Она позволяет
разработчикам хранить только дельты к исходному коду в системе контроля версий,
а не сам архив, что экономит место и упрощает управление изменениями. При
необходимости, `pristine-tar` может воссоздать оригинальный архив с точностью
до байта.

Выводит список всех архивов, для которых в репозитории доступны метаданные
`pristine-tar`. Это помогает увидеть, какие оригинальные архивы можно
воссоздать с помощью утилиты:

$ pristine-tar list

Создает commit в системе контроля версий с необходимыми метаданными, чтобы
в будущем можно было воссоздать точную копию указанного архива
`<package>_<version>.orig.tar.bz2`. Метаданные будут добавлены в ветку
`upstream/latest`:

$ pristine-tar commit ../<package>_<version>.orig.tar.bz2 upstream/latest

Генерирует .delta файл, который содержит информацию о различиях между архивом и
его восстановленной версией. Это дельта-файл используется для восстановления
точной копии оригинального архива:

$ pristine-tar gendelta ../<package>_<version>.orig.tar.bz2 <package>_<version>.orig.tar.bz2.delta

Чтобы восстановить архив, надо перейти в директорию в которой лежит .delta файл
и выполнить:

$ pristine-tar checkout ../<package>_<version>.orig.tar.bz2
Создаст/восстановит -> ../<package>_<version>.orig.tar.bz2


--- BTS (submit@bugs.debian.org)
Можно не использовать утилиту `reporbug`, а написать письмом на прямую.
Например, если нужно создать новый тикет в системе BTS
(Debian Bug Tracking System <submit@bugs.debian.org>)

Допустим RFP:

Package: wnpp
Severity: wishlist

Package name: <name>
Version: <version>

и т.д.


--- BTS (0000000@bugs.debian.org)
Кому: 1092159@bugs.debian.org
Тема: #1092159
Control: retitle -1 ITP: libxfce4windowing -- windowing library

В системе отслеживания ошибок Debian (BTS) с помощью команд Control можно
вносить изменения в тикеты. Например, команда `retitle` позволяет изменять
заголовок тикета. Это небольшой пример.


--- Шаблон письма при отправке патчей/изменений
Мне нравится этот шаблон.

Subject: [PATCH] Updates and Improvements to the '<package>' package.

<suite>: <package>: <version>

Dear Maintainer, sorry for bothering you.
I hope this message finds you well.

...

Thank you!


--- Процесс загрузки пакета в архив
Здесь описан короткий план действий, подробнее смотреть`--- DAK` и
`--- Как выложить пакет на mentors.debian.org (dput)`.

1. Подготовка пакета: Вы вносите необходимые изменения в пакет, включая
обновление changelog, и проверяете, что все работает корректно.

2. Загрузка на Salsa: Вы загружаете изменения в репозиторий на Salsa и
убеждаетесь, что все в порядке.

3. Загрузка в Debian: Чтобы пакет попал в архив Debian, его нужно загрузить с
помощью утилиты `dput` или `dupload`. Эти утилиты отправляют пакет на сервер
загрузки Debian (например, ftp-master.debian.org).

4. Процесс проверки: После загрузки пакет проходит автоматические проверки.
Если он соответствует всем требованиям, он будет принят и добавлен в архив
unstable.

5. Информация о загрузке: Вы получите уведомление о статусе вашей загрузки —
успешная она или отклонена с указанием причин.

(!!!) Загрузка пакетов в архив Debian требует определенных привилегий и прав,
которые есть у Debian Maintainers (DM) и Debian Developers (DD).

(!!!) Если у вас нет непосредственного доступа для загрузки пакета в архив
Debian через права DD или DM, вы можете использовать систему
mentors.debian.net. Это платформа, где вы можете представить свой пакет для
проверки и поиска спонсора, который сможет загрузить его в архив от вашего
имени.


--- Разбор Debian ссылок
* https://archive.debian.org/:

- Этот архив содержит устаревшие версии Debian и пакеты, которые больше не
  поддерживаются официально.

- Используется для доступа к старым версиям Debian и их репозиториям, которые
  были удалены из основных серверов из-за прекращения поддержки.

- Полезен, если вам нужно работать с историческими версиями Debian или
  восстановить старую систему.

* https://ftp.debian.org/debian/:

- Адрес http://deb.debian.org/debian из sources.list - это
  https://ftp.debian.org/debian/

- Это основной сервер для официальных и поддерживаемых версий Debian.

- Здесь находятся актуальные версии пакетов и репозитории, на которые вы,
  вероятно, будете ссылаться для установки или обновления программ на
  действующих системах Debian.

- Поддерживается и обновляется сообществом Debian.

* https://ftp-master.debian.org/:

Это сайт, связанный с инфраструктурой Debian, который обслуживает разработчиков
и администраторов пакетов. Он содержит информацию о текущем состоянии архивов,
таких как статус сборки пакетов и различные инструменты для управления
репозиториями. Это не обычный репозиторий для загрузки пакетов пользователями,
а часть внутренней логистики и управления пакетами в проекте Debian.

Например, здесь: https://ftp-master.debian.org/new.html можно увидеть очередь
пакетов, которые проверяются перед добавленим в Debian архив.


--- Что такое Copyright
# Copyright © Kirill Rekhov <krekhov.dev@gmail.com>, 2024-2025.

Это уведомление указывает на то, что Кирилл Рехов обладает авторским правом на
произведение, СОЗДАННОЕ в период с 2024 по 2025 год. Это важно для юридического
признания авторства и защиты прав на произведение. Срок действия авторских прав
не ограничивается датами, указанными в уведомлении.  Эти даты обычно указывают,
когда произведение было создано или обновлено.

Строка с Copyright помогает идентифицировать автора или владельца кода. Это
важно для признания заслуг разработчика и может быть значимо в случае споров о
происхождении кода. Это так называемое авторское право.


--- Что такое Copyleft
Это концепция лицензирования, которая позволяет распространять копии и
модифицированные версии произведения при условии, что те же права сохраняются
для всех последующих пользователей.

Основная цель Copyleft — поддержка открытого и свободного использования
программного обеспечения, обеспечивая, чтобы все производные работы оставались
также свободными.

Если вы изменяете или добавляете что-то к GPL-коду и затем распространяете эту
модифицированную версию, вы обязаны сделать это под лицензией GPL и предоставить
исходный код.
