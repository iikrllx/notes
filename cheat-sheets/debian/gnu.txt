Темы:
* GNU (GNU's Not Unix)
* GNU GPL лицензия
* Gnu философия
* Debian философия
* Debian Desktop
* Debian Mailing List
* Package sponsor (debian)
* Co-maintenance
* Какие роли есть в Debian
* Как получить роль DM
* Портирование
* Native vs non-native package
* Реклама и Debian =)
* Debian LTS (Debian Long Term Support)
* Схема выпуска релизов Debian
* Образ Debian (CD/DVD)
* Code Names Debian
* Free software movement и Open source
* DAK
* Debian изменения и upstream
* Debian и запад
* Количество
* Предложенные патчи для upstream
* Debian vs Ubuntu
* Debian installer

Тысячи людей практически безвозмездно трудятся на благо всего человечества,
а плодами их труда пользуются все. В этом сила Open Source.


--- GNU (GNU's Not Unix)
Свободные программы передают своим пользователям контроль над их собственными
вычислениями. Несвободные программы отдают своих пользователей во власть
разработчика программ.

Свобода программы означает, что у пользователей есть свобода выполнять,
копировать, изучать, править, улучшать. Полный доступ к исходному коду. Можно
править программу так, чтобы она выполняла ваши вычисления, как вы желаете.

Программы GNU распространяются под GNU стандартами, их можно увидеть в секции
Copyright Например: `man uname`

Есть пакет называемый `coreutils` - пакет програмного обеспечения GNU,
содержащий большое кол-во утилит (`cat`, `ls` и т.д), а исходники этих утилит
можно посмотреть `coreutils source`.

Проприетарное программное обеспечение (ПО) - это программное обеспечение, чьи
права на использование, изменение и распространение контролируются владельцем
или разработчиком ПО. Пользователи обычно не имеют права на доступ к исходному
коду или на изменение программы без разрешения правообладателя.

GNU/Linux не относится к проприетарному ПО. GNU/Linux - это операционная система
с открытым исходным кодом, построенная на ядре Linux и дистрибутиве GNU.
Пользователи имеют право на свободное использование, изменение и распространение
этой операционной системы в соответствии с лицензией GNU General Public License (GPL).
А вот Windows является проприетарной операционной системой.

Ричард Столлман является основателем движения свободного ПО (СПО). Автор
концепции «копилефта», призванной защищать идеалы движения; эту концепцию он с
помощью юристов позже воплотил в лицензии GNU General Public License (GNU GPL)
для ПО. Ранее также известный программист. Из авторских программ можно отметить
'GNU Emacs', 'Коллекция компиляторов GNU (GCC)' и 'Отладчик GNU (GDB)'. С
середины 1990-х годов Столлман стал программировать значительно меньше, посвятив
себя распространению идей свободного ПО.

Столлман не советует пользоваться сотовыми телефонами, он считает, что
возможность определения текущего местоположения телефона может создать различные
проблемы для абонента. Он объясняет, что при обыкновенном (кнопочном)
выключении телефона, он на самом деле выключенным не является, и продолжает
обратно отсылать сигналы, так что остаётся возможность с помощью метода
триангуляции определить место нахождения пользователя и отслеживать его
перемещения. Кроме того, микрофон может быть включен без ведома пользователя.
В связи с этим Ричард также рекомендует вынимать батарею из мобильного телефона.

Интересная мысль: кто задает инструкции вашему компьютеру? Пользователь или
корпорации? В большинстве случаев CPU обрабатывает огромное кол-во инструкций
необходимых именно корпорациям, а не пользователю. ПК не подчиняется вашим
инструкциям. ПК выполняет пользовательские инструкции в той мере, в которой ему
позволяют корпорации. Либо пользователь контролирует программы, либо программы
контролируют пользователя. Корпорации превращают пользовательские данные в
звонкую монеты, они жадные, и найдут способы как саботировать пользователя и
создать из этого прибыль. Большие компании делают большие деньги контролируя
пользователей. С закрытым ПО программист вряд ли чему-то научится, а с СПО все
иначе. Программисты анализируют и дезасамблируют закрытое ПО чтобы затем
написать открытое ПО. Это ужасно нелогично и затрагивает большое кол-во
времени. Это тяжелая работа. В нашей жизни компьютеры стали настолько важны,
что свобода ПО стоит на первом месте по решению проблем/задач, это
необходимость.

Хороший пример с человеческим организмом, люди контролируют свое питание, прием
жидкости, витаминов, фруктов и т.д, а почему вычисления компьютера нельзя
контролировать? Это несправедливо. Корпорации чувствуют власть над
пользователями и поэтому злоупотребляют ей, они лучше знают как надо
пользователю (видите ли), они постоянно испытывают искушение плохо обращаться с
пользователями, таким образом корпорации внедряют различные зловредные функции
(шпионаж) и пользователи не смогут это исправить, ведь ПО несвободное. В
проприетарном ПО слежка является уже нормой. Windows, Mac OS, Android, IOS,
Amazon - главные шпионы. Но люди все равно будут соглашаться на слежку, потому
что уже не представляют свою жизнь без этих коммерческих продуктов.

Данные пользователей отправляются на сервер, который контролирует корпорация.
Затем корпорация может извлекать от туда данные и делать с ними все что угодно,
например, продавать другим компаниям (рекламным) и т.д. Если производитель
закрытого ПО закроет свои сервера, пользователь не сможет пользоваться
приложениями без них. Потому что данные передаются круглосуточно.

В IOS, Android есть черные хода, через которые можно принудительно установить
или стереть либое приложение у пользователя на смартфоне. Иногда я замечал
подобное, что за ночь поставились какие-то левые приложения, производители
перегибают палку.

Почему корпорации делают все вышеописанное? Что дает им мотивацию? Прибыль,
деньги. На слежке, на контроле пользователей можно делать деньги, и они это
отлично понимают. Иногда корпорации творчески притворяются, что уважительно
относятся к пользователю, но это не так, это уловка.

Свободное ПО как правило честное. А проприетарное ПО как правило вредоносное,
причины -> наличие власти. Власть развращает.

Сейчас не нужно через силу заставлять людей внедрять чипы, чтобы следить за
ними, они и сами это сделают за бесплатные услуги корпораций. Нас подсаживают на
бесплатные облаки, музыку, фильмы и т.д. Нужно отказываться.

Людям необходимо контролировать власть государства, потому что у гос-ва есть
огромное искушение использовать данные людей как им вздумается.


--- GNU GPL лицензия
Юридический документ. Эта лицензия дарит свободу ПО. Никто не имеет право
закрывать код проекта/программы. Ричард Столлман считает, что закрытое ПО
приведет мир к тотальной слежке и бесконтрольной передаче данных 3 лицам.
Он считает, что закрытые программы ограничивают свободу пользователей и подвергают
их контролю со стороны разработчиков.

"Программное обеспечение, которое не является свободным, это инструмент контроля
над нами. Это нас унижает и лишает свободы." Это война с корпорациями зла
Google, Microsoft. Не стоит закрывать глаза на дыры в своей безопасности.
Данные, информация, это очень важно.

Ричард Столлман неоднократно подвергался давлению среди данных корпораций. Он
невыгоден системе. Американское сообщество натравили на него ЛГБТ сообщества,
лесбиянок, геев, трансгендеров, и пытались добиться его ухода из сообщества СПО.
Отличный пример того как работает американская система.

GNU GPL (General Public License) - это свободная лицензия, которая позволяет
свободно использовать, изменять и распространять программное обеспечение.
Она устанавливает условия, при которых можно использовать программу и ее
исходный код. Свободное использование в контексте GNU GPL лицензии означает, что
пользователи имеют право свободно запускать программу в любых целях, изучать ее
и изменять по своему усмотрению, а также распространять ее исходный код или
измененные версии программы.

Использование GNU GPL лицензии позволяет разработчикам и пользователям
программного обеспечения свободно обмениваться идеями, улучшать и дополнять
программы, а также создавать новые продукты на их основе. Это способствует
развитию открытого и свободного программного обеспечения, а также способствует
распространению знаний и технологий.

Пользователи, которые получили программу под GNU GPL лицензией и внесли
изменения в исходный код программы, обязаны предоставить доступ к своим
изменениям исходного кода. Это означает, что они должны распространять свои
измененные версии программы также под GNU GPL лицензией и предоставить доступ к
своему исходному коду другим пользователям. Этот принцип обеспечивает сохранение
свободы программы и позволяет другим разработчикам изучать, улучшать и
распространять эти изменения.

Если компания взяла программу под GNU GPL лицензией, внесла в неё изменения и
начала продавать её, но при этом ограничила доступ к своим измененным исходным
кодам, она нарушает принципы GNU GPL лицензии. GNU GPL обязывает распространять
исходный код программы и любые изменения к нему под той же лицензией, чтобы
сохранить свободу программы для всех пользователей. Такие действия могут
привести к правовым последствиям и претензиям со стороны сообщества свободного
программного обеспечения. Для коммерческого ПО открывать исходники всем - это
непринято, НО придется бесплатно предоставлять исходники проекта конечным
получателям, даже если вы распространяете продукт за деньги. Да, продажа
программы лицензией вполне разрешена. Предоставлять исходники можно как вместе
с программой, так и отдельно.


--- Gnu философия
Философия GNU (GNU's Not Unix) заключается в приверженности свободному и
открытому программному обеспечению. Основные принципы GNU включают в себя:

*
Свобода использования: Пользователи имеют право использовать программное
обеспечение в любых целях без каких-либо ограничений.

*
Свобода изучения: Пользователи имеют право изучать, адаптировать
и модифицировать программное обеспечение по своему усмотрению.

*
Свобода распространения: Пользователи имеют право распространять копии
программного обеспечения и делиться им с другими.

*
Свобода улучшения: Пользователи имеют право улучшать программное обеспечение
и делиться своими улучшениями с сообществом.

GNU философия призывает к сотрудничеству, обмену знаниями и созданию
программного обеспечения, которое будет доступно для всех без ограничений
и безопасно для использования.


--- Debian философия
Debian - это операционная система, основанная на свободном и открытом
программном обеспечении. Философия Debian, известная как Debian Social
Contract, включает в себя следующие принципы:

*
Свобода: Debian стремится к созданию операционной системы, которая полностью
основана на свободном программном обеспечении. Это означает, что пользователи
имеют право использовать, изучать, изменять и распространять программное
обеспечение без каких-либо ограничений.

*
Независимость: Debian не зависит от коммерческих интересов или корпоративных
спонсоров. Он остается независимым проектом, основанным на принципах свободного
программного обеспечения.

*
Стабильность: Debian стремится к созданию стабильной и надежной операционной
системы, которая будет поддерживаться и обновляться на протяжении длительного
времени.

*
Сотрудничество: Debian активно поддерживает сотрудничество и обмен идеями с
другими проектами и сообществами, чтобы создать лучшее программное обеспечение
для всех.

Философия Debian подчеркивает важность свободы, независимости, стабильности и
сотрудничества в разработке программного обеспечения и обеспечении пользователям
доступа к качественной операционной системе.


--- Debian Desktop
Debian Desktop - это рабочее окружение, предназначенное для использования на
настольных компьютерах. Оно включает в себя различное программное обеспечение,
такое как графические оболочки (например, GNOME, KDE, Xfce), офисные приложения,
веб-браузеры, мультимедийные приложения и другие инструменты, необходимые для
повседневной работы на ПК.

Некоторые пакеты, которые обычно относятся к Debian Desktop, включают в себя:

1. GNOME или KDE (графические оболочки)
2. LibreOffice (офисный пакет)
3. Firefox или Chromium (веб-браузеры)
4. VLC (мультимедийный проигрыватель)
5. GIMP (графический редактор)
6. Thunderbird (почтовый клиент)
7. Любые другие приложения, необходимые для работы и развлечений на рабочем столе

Эти пакеты обычно включены в образы установочных дисков Debian Desktop или
доступны для установки из официальных репозиториев Debian.

В первую очередь Debian является серверной операционной системой, которая широко
используется для управления серверами и сетями. Debian предлагает стабильность,
безопасность и широкий выбор программного обеспечения, что делает его популярным
выбором для развертывания серверов.


--- Debian Mailing List
Debian Mailing List - это список рассылки электронных писем, предназначенный для
обсуждения и обмена информацией о дистрибутиве Debian. Эти списки рассылки
используются членами сообщества Debian (разработчиками, пользователями,
поддерживающими и др.) для организации обсуждений, объявлений и координации
деятельности в рамках проекта Debian.

Участники могут подписаться на соответствующий список рассылки и отправлять
сообщения на адрес списка, который будет автоматически распространяться на всех
подписчиков. Члены сообщества могут обсуждать темы, задавать вопросы, делиться
опытом и решениями проблем, а также получать актуальные новости и обновления о
Debian.

Многие ключевые группы Debian, такие как `debian-devel` (для обсуждения
разработки), `debian-user` (для пользователей Debian), `debian-announce`
(для объявлений) и другие, имеют свои собственные списки рассылки.

Общение через Debian mailing list является одним из основных способов
взаимодействия и координации усилий в сообществе Debian.

https://www.debian.org/MailingLists/subscribe


--- Package sponsor (debian)
Например, в сообществе Debian, это человек, который имеет право загружать пакеты
в официальный репозиторий Debian. Он обычно отвечает за проверку пакетов, их
соответствие стандартам Debian и их безопасность. Если разработчик пакетов хочет
загрузить свой пакет в официальный репозиторий, ему нужно найти Debian спонсора,
который согласится проверить этот пакет и загрузить его. Обычно спонсорами могут
быть члены Debian Maintainers или Debian Developers.


--- Co-maintenance
Co-maintenance означает совместное управление или совместную поддержку пакета в
системе Debian Linux. Это означает, что несколько людей работают вместе над
поддержанием и обновлением пакета, чтобы обеспечить его надлежащее
функционирование и актуальность. В таких случаях обычно существует команда
сопровождения, которая делит ответственность за пакет и обеспечивает его
поддержку в сообществе Debian.


--- Какие роли есть в Debian
* Debian Maintainer (DM): This is the first step – as DM you can upload your own
packages to the Debian archive (with some restrictions). Unlike Sponsored
Maintainers, Debian Maintainers can maintain packages without a sponsor.

* Debian Developer (DD): This is the traditional full membership role in Debian.
A DD can participate in Debian elections. Uploading Debian Developers can
upload any package to the archive. Before you become an Uploading DD, you should
have a track record of maintaining packages for at least six months (for
example, uploading packages as a DM, working inside a team or maintaining
packages uploaded by sponsors). Non-uploading DDs have the same packaging rights
as Debian Maintainers. Before you apply as a non-uploading DD, you should have a
visible and significant track record of working inside the project.

Кто делал uploads:
$ who-uploads <package>

* Mentor - это опытный участник Debian, который помогает новичкам в сообществе
разобраться с процессами разработки и сопровождения пакетов, а также с другими
аспектами участия в проекте.

* Sponsor - спонсор обязуется проверить, что нет серьезных проблем с качеством,
но не записывается как сопровождающий пакета. Спонсорство может быть одноразовым
событием, либо спонсор также может действовать неформально как наставник,
помогая находить ошибки и улучшать упаковку.

* Sponsored Maintainer - это человек, который сопровождает Debian пакеты и
выкладывает их в архивы засчет спонсора (DD/DM - он как бы контролирует это
все).

* Debian Maintainer - это участник Debian, который имеет право загружать пакеты
в Debian-архивы и обеспечивать их обслуживание/сопровождение и обновление.

Существуют публично доступные архивы, например http://mentors.debian.net/,
которые работают почти также как архив Debian и предоставляют зону для отправки
людям, не имеющим статуса разработчика Debian.


--- Как получить роль DM
Чтобы стать Debian Maintainer, необходимо сначала стать Sponsored Maintainer,
т.е. иметь спонсора из числа существующих Debian Developers, который будет
поддерживать работу и помогать внести вклад в проект. После того, как вы
продемонстрируете свою способность и активность в Debian, можно подать заявку на
статус Debian Maintainer. Важно не только проявить свои навыки, но и показать,
что вы готовы к долгосрочному вкладу в проект. Обычно рекомендуется примерно
6 месяцев активного вклада в проект перед отправкой заявки на DM.

Можно начать делать review пакетов, отправлять исправления/советы мейнтейнеру:
* Verify Lintian outputs: Did Lintian miss something, are fixes semantically correct?
* Does the package satisfy Debian's best practices for packages?
* Does the package correctly declare dependencies as defined in the policy?
* Does the package meet the DFSG? If yes, is the copyright file up to date and correct?
* Do the maintainer scripts supplied with the package look robust, idempotent and useful?
* Is there a watch file? If yes, does it work?
* Can you build the package in a clean build chroot?
* Was the upstream tarball modified? If yes, is there a good reason to do so?

If you want to contribute to Debian, but you do not know which packages to
contribute to, take a look at "Request for help" (RFH), "Request for adopter"
(RFA), "Intent to Package" (ITP), "Orphaned package" (O) and "Request for
package" (RFP) bugs. See WNPP.

`O` - Пакет брошен и нужен новый сопровождающий, который продолжит поддерживать пакет.

`RFH` - Сопровождающий ищет помощи.

`RFA` - Сопровождающий ищет того, кто усыновит пакет (нужен новый сопровождающий - адоптер),
но пока что не забросил пакет и продолжает работу над ним.

`RFP` - Разработчик предлагает включение нового пакета программного обеспечения
в репозиторий Debian. Это означает, что человек или группа людей хотят, чтобы
данный пакет был добавлен в официальный репозиторий Debian и доступен для
установки пользователям. Другие участники могут выразить заинтересованность
и поддержать.

`ITP` - разработчик Debian выразил намерение упаковать новый пакет программного
обеспечения для Debian. Когда пакет получает статус ITP, это означает, что
разработчик планирует взять на себя работу по упаковке пакета и его включению в
репозитории Debian.

1. Изучить основы пакетирования.

2. Подписаться на Mailing list, например, `debian-devel` и `debian-mentors`.
Изучать новости, письма, сообщения и обсуждения сообщества. Посещайте IRC-каналы:
Присоединитесь к IRC-каналам на OFTC, например, `#debian` и `#debian-mentors`.
Здесь вы сможете задать вопросы и получить помощь от более опытных участников
сообщества. Так же можно присоединиться к определенной команде
(на выбор - Teams) и там задать вопросы.

Зарегистрироваться на:
https://mentors.debian.net/accounts/register/
https://salsa.debian.org/
https://nm.debian.org/

3. Если вы не имеете роль DM/DD можно найти спонсора/наставника, загрузить свои
исправления, пакеты и попросить опытныйх мейнтейнеров проверить вашу работу.

4. Найдите пакеты, которые нуждаются в помощи (можно выбрать команду и
посмотреть их пакеты, которые трубют помощи). Это могут быть пакеты с открытыми
багами, требующие обновления или улучшения. Свяжитесь с текущими мейнтейнерами и
предложите свою помощь.

5. Изучите исходные коды на: https://salsa.debian.org/ официальная платформа
хостинга кода для Debian. Изучите историю изменений пакета в системе контроля
версий (Git), чтобы понять, какие изменения вносились и почему.

5. Взгляните на осиротевшие пакеты (orphaned packages). Это пакеты, у которых
больше нет активного мейнтейнера. Взять на себя ответственность за осиротевший
пакет может любой разработчик Debian или Debian Maintainer. Однако, если у вас
еще нет официального статуса DM, вы можете работать с текущими мейнтейнерами или
под наставничеством, чтобы помочь с поддержкой этих пакетов.

Можно принять простой пакет, поломка которого не расстроит многих людей (wnpp).
Смотреть: WNPP (Work-Needing and Prospective Packages). Можно воспользоваться
`wnpp-alert` утилитой, она подскажет какие пакеты нуждаются в помощи, а
`manpage-alert` укажет каких мануалов не хватает. А утилита `how-can-i-help`
покажет во что можно сделать вклад в Debian.

В общем, если вы хотите начать с осиротевших пакетов, найдите одного или
нескольких наставников, которые помогут вам с этим процессом. Они могут
спонсировать ваши изменения и помочь вам внести их в официальный архив Debian.

6. Найдите ошибки в системе отслеживания ошибок (BTS - Bug Tracking System) и
попробуйте их исправить. Это продемонстрирует ваше желание и умение работать с
пакетами. Отправка патчей: Если вы нашли проблему или улучшение для пакета,
создайте патч и отправьте его текущему мейнтейнеру через систему отслеживания
ошибок (BTS) Debian. Существуют RC bugs (release-critical bugs), можно
воспользоваться `rc-alert` утилитой для просмотра списка таких багов.

A big part of your job as Debian maintainer will be to stay in contact with the
upstream developers. Debian users will sometimes report bugs that are not
specific to Debian to our bug tracking system. These bug reports should be
forwarded to the upstream developers so that they can be fixed in a future
upstream release. Usually it is best if you can do this, but alternatively, you
may ask the bug submitter to do it.

7. Выберите программное обеспечение, которое вам интересно, и создайте для него
пакет. Убедитесь, что он соответствует стандартам Debian. Загрузите свои пакеты
в `mentors.debian.net` и попросите отзывов у сообщества. Менторы и другие
разработчики помогут вам улучшить ваши пакеты. Протестируйте как следует свой
пакет, запустить `lintian`, а еще -> make sure that your package build fine in a
clean sid chroot, и т.д и т.п.

Если вы хотите создать новый пакет для дистрибутива Debian, вам следует вначале
проверить список требующих доработки и будущих пакетов (WNPP)
(https://www.debian.org/devel/wnpp/). Проверка списка WNPP гарантирует, что в
настоящий момент никто не работает над созданием пакетов для данного ПО, и что
не будет проделана повторная работа.

Допустим, что более никто не работает над вашим будущим пакетом. Далее, вам
следует отправить сообщение об ошибке (Отправка отчётов об ошибках
(https://www.debian.org/doc/manuals/developers-reference/beyond-pkging.ru.html#submit-bug))
в псевдопакете `wnpp` с объяснением вашего плана по созданию нового пакета, ваше
сообщение должно в себя включать описание пакета, лицензию будущего пакета и
текущий адрес, по которому этот пакет может быть загружен.

8. Соберите рекомендации: Работайте с несколькими мейнтейнерами, чтобы они могли
дать вам рекомендации. Это важная часть процесса заявки на статус Debian
Maintainer. Когда вы будете готовы, подайте заявку на статус Debian Maintainer
(попросите отзывов у своих наставников и других разработчиков, с которыми вы
работали). Процесс включает в себя оценку вашего опыта и рекомендаций, а также
интервью с членами Debian Developer.

9. Продолжайте учиться и участвовать. Постоянно участвуйте в разработке и
поддержке пакетов. Это поможет вам улучшать свои навыки и укреплять связи в
сообществе. Обновляйте знания: Debian - это динамичная система, и стандарты
могут меняться. Следите за обновлениями в документации и новых практиках.

10. Так же можно быть переводчиком (делать вклад с помощью переводов текстов на
русский язык) или быть QA.

11.
Можно помогать другим инженерам при работе с RFP/ITP задачами (в команде).

(!!!) Более бодробно можно посмотреть на официальных источниках.

Другими словами. Примерный план действий:
1. Найдите интересующий вас пакет на Salsa и изучите его структуру и историю изменений.
2. Проверьте, нет ли у него заявленных проблем или запросов на помощь (например, через WNPP).
3. Свяжитесь с текущим мейнтейнером через почтовый список или IRC-канал.
4. Предложите свои исправления или улучшения через систему отслеживания ошибок (BTS).
5. По мере накопления опыта, подайте свою заявку на статус Debian Maintainer.

В Debian существует множество строгих стандартов (для пакетирования) и нужно
следовать им. Поэтому обязательно нужно прочесть официальные источники Debian
Policy и подобные.

Начинающему сопровождающему следует избегать работу над пакетами, содержащими
программы с высокими рисками в плане безопасности:
* программы, имеющие флаги доступа setuid или setgid
* программы, устанавливаемые в каталоги /sbin/ или /usr/sbin/


--- Портирование
Портирование (англ. porting) в разработке программного обеспечения относится к
процессу адаптации программного продукта (например, приложения, библиотеки или
операционной системы) для работы на другой платформе или операционной системе.

Например, debian/patches старого пакета адаптировали под новую версию.

В случае Debian, портирование пакетов означает, что разработчики адаптируют
существующие программные пакеты для работы на Debian GNU/Linux (или других
вариантах Debian, таких как Ubuntu, Mint и т.д.). В процессе портирования
пакета нужно учитывать различия в окружении, библиотеках, зависимостях,
архитектуре и других параметрах между платформами.

Обычно Debian имеет несколько архитектур (например, amd64, i386, arm64 и
другие), и портирование пакета означает его адаптацию для работы на конкретной
архитектуре Debian.


--- Native vs non-native package
Default to making packages non-native. They are the regular ones. You should
only use a native Debian package when it is clear that the package would not be
useful outside the context of a Debian system, and would never be distributed
except packaged for Debian or its derivatives. Even if the software is currently
only available in Debian, if someone could reasonably use the software on
another distribution or on another operating system, then the package should be
non-native. A few examples of normal (non-native) packages are: `libc6`,
`apache`, `phpmyadmin`. And tools like `lintian`, `dpkg` and some others are
purely developed for Debian, and make no sense being released in another
distribution; these belong in native Debian packages.

Родной Debian пакет (нативный) - это пакет программного обеспечения, который
официально поддерживается и распространяется через репозитории Debian. Эти
пакеты проходят строгую проверку и соответствуют стандартам качества и
безопасности Debian.

Неродной пакет (не нативный) - это пакет, который не входит в официальные
репозитории Debian. Он может быть получен из сторонних источников, таких как
репозитории других дистрибутивов или непосредственно от разработчиков
программного обеспечения. Неродные пакеты могут не соответствовать стандартам
Debian и могут требовать дополнительных настроек и проверок безопасности.


--- Реклама и Debian =)
Поскольку Debian не тратит деньги на маркетинговые и рекламные компании,
пользователи дистрибутива играют главную роль в его продвижении, распространяя
славу о нём из уст в уста.


--- Debian LTS (Debian Long Term Support)
Это программа поддержки для стабильных версий операционной системы Debian,
которая предоставляет обновления безопасности и исправления ошибок для
устаревших версий Debian в течение длительного времени после того, как они
перестают получать поддержку от проекта Debian. Debian LTS обеспечивает
дополнительное время для пользователей, которые не могут или не хотят
обновляться до более новых версий Debian.

Таблицу LTS поддержки можно увидеть: https://wiki.debian.org/LTS


--- Схема выпуска релизов Debian
1. Unstable (Sid):
Все начинается с ветки под названием `unstable` (также известной как `sid`).
Это место, куда попадают все новые пакеты и обновления пакетов. В эту ветку
могут загружаться пакеты, которые еще не прошли полное тестирование.
Разработчики и пользователи, которые готовы рисковать и сталкиваться с
потенциальными проблемами, могут использовать эту ветку для тестирования новых
функций и пакетов.

2. Testing:
Пакеты из ветки `unstable`, которые не имеют критических ошибок на протяжении
определенного времени (обычно 10 дней), автоматически переходят в ветку
`testing`. Ветка `testing` предназначена для более широкого тестирования
пакетов. Она более стабильна по сравнению с `unstable`, но все еще может
содержать ошибки. Важно отметить, что во время подготовки к новому релизу ветка
`testing` замораживается на определенный период, чтобы стабилизировать ее и
устранить все оставшиеся проблемы.

3. Stable:
После периода заморозки и тщательного тестирования ветка `testing` становится
новым стабильным релизом (stable). Ветка `stable` предназначена для конечных
пользователей, которые ожидают максимальной надежности и безопасности.
Обновления в эту ветку поступают только в виде исправлений безопасности
и критических ошибок.

4. Oldstable и LTS:
Когда выпускается новый стабильный релиз, предыдущий релиз перемещается в ветку
`oldstable`. Ветка `oldstable` продолжает получать обновления безопасности и
критические исправления в течение определенного времени. Кроме того, существует
программа поддержки с длительным сроком (LTS), которая обеспечивает обновления
безопасности для старых стабильных релизов в течение нескольких дополнительных
лет.

5. Security и Backports:
Существуют также ветки `security` и `backports`. Ветка `security` предназначена
для быстрого распространения обновлений безопасности для стабильного релиза.
Ветка `backports` содержит более новые версии некоторых пакетов, которые были
подготовлены для стабильного релиза, чтобы предоставить пользователям доступ к
новым функциям без необходимости перехода на `testing` или `unstable`.

Существует еще одна ветвь, называется `experimental`, она не учавствует в схеме
выпуска релизов Debian. Короче говоря, эта ветвь содержит очень нестабильное,
экспериментальное ПО. Данное ПО нестабильнее `unstable` ветки.

Коротко и ясно, этапы:
1. Upstream Author -> Release of a new version.
2. Debian Maintainer -> Packaging and update -> Source Package.
3. Source Package -> Source-only upload to the Debian Server -> Unstable.
4. Source Package -> Autobuilders -> Binary Packages (various architectures).
... or ...
5. Source Package -> amd64 binary package built by the maintainer (optional).
6. Binary Packages -> Testing -> Stable

Autobuilders - это автоматизированные системы, которые компилируют исходные
пакеты в бинарные пакеты. Они играют ключевую роль в процессе разработки Debian,
обеспечивая, что пакеты компилируются для всех поддерживаемых архитектур.

- Когда исходный пакет загружается в ветку `unstable`, Autobuilders
  автоматически берут этот исходный код и компилируют его на различных
  архитектурах (например, i386, amd64, arm64 и других).

- После успешной компиляции бинарные пакеты загружаются обратно в хранилище Debian.

Хранилище Debian расположено на https://ftp.debian.org/debian/.


--- Образ Debian (CD/DVD)
CD(net) и DVD, в чем отличия?
Debian ISO-образы доступны в двух форматах: CD (Net) и DVD. Разница между ними
заключается в количестве программного обеспечения, которое включено в них.

CD (Net) образ содержит минимальное количество пакетов и программного
обеспечения, необходимых для установки базовой системы Debian. Этот образ обычно
используется для установки базовой системы и последующего скачивания
дополнительных пакетов из Интернета во время установки.

DVD образ, напротив, содержит гораздо больше пакетов и программного обеспечения,
включая множество дополнительных утилит, программ и драйверов. Этот образ обычно
используется для установки полной версии Debian сразу с большим количеством
программного обеспечения.


--- Code Names Debian
Дистрибутивы Debian традиционно называются в честь персонажей из анимационного
фильма "История игрушек" (Toy Story) студии Pixar. Вот несколько примеров:

...
Debian 5.0 - "Lenny" (в честь бинокля Лени)
Debian 6.0 - "Squeeze" (в честь инопланетных игрушек)
Debian 7.0 - "Wheezy" (в честь пингвина Визи)
Debian 8.0 - "Jessie" (в честь Джесси, ковбойки)
Debian 9.0 - "Stretch" (в честь осьминога Стретча)
Debian 10.0 - "Buster" (в честь собаки Бастера)
Debian 11.0 - "Bullseye" (в честь быка по имени Булзай)
Debian 12.0 - "Bookworm" (в честь книжного червя Букворм)
Debian 13.0 - "Trixie" (в честь динозавра Трикси)
...

а первая версия Debian 1.1 называлась в честь главного героя Базза Лайтера -
(Buzz). Этот принцип сохранения имен в честь персонажей из "Истории игрушек"
является традицией и помогает легко идентифицировать различные версии
дистрибутива.


--- Free software movement и Open source
Это схожие, но разные концепции.

Free software movement (движение за свободное программное обеспечение)
фокусируется на свободах пользователей: запускать, изучать, изменять и
распространять программы. Его основоположник - Ричард Столлман.
Free Software Movement использует термин "свободное программное обеспечение"
(free software), где "free" означает свободу, а не отсутствие стоимости.

Open source (открытое ПО) подчеркивает практические преимущества открытого кода:
улучшенная безопасность, гибкость и сотрудничество. Оно менее акцентируется на
этических вопросах по сравнению с free software movement.


--- DAK
DAK (Debian Archive Kit) в основном используется администраторами архивов
Debian, известными как Debian FTP Masters. Это набор инструментов и утилит,
используемых для управления архивом пакетов в проекте Debian. DAK отвечает за
различные аспекты обработки пакетов, такие как их загрузка, проверка, публикация
и удаление. Вот основные функции и возможности DAK:

1. Загрузка пакетов: DAK позволяет разработчикам загружать новые версии пакетов
в архив. Это делается с помощью утилиты `dput` или `dupload`.

2. Проверка пакетов: После загрузки пакеты проходят различные проверки на
целостность и соответствие правилам Debian. Проверяются подписи, соответствие
политике, наличие всех необходимых метаданных и многое другое.

3. Публикация пакетов: После успешной проверки пакеты добавляются в
соответствующие репозитории (например, unstable, testing, stable).
DAK управляет процессом перемещения пакетов между этими репозиториями в
зависимости от их статуса и стабильности.

4. Удаление пакетов: В случае необходимости DAK может удалять пакеты из архива.
Это может быть связано с устареванием пакетов, обнаружением критических ошибок
или другими причинами.

5. Управление метаданными: DAK управляет всей метаинформацией, связанной с
пакетами, включая списки изменений (changelogs), описания пакетов, зависимости и
другие данные.

6. Статистика и отчеты: DAK предоставляет различные инструменты для генерации
отчетов и статистики по состоянию архива, что помогает разработчикам и
администраторам следить за состоянием пакетов и репозиториев.

7. Интеграция с другими системами: DAK интегрируется с другими системами и
сервисами, используемыми в проекте Debian, такими как Bugzilla для отслеживания
ошибок и Jenkins для автоматизированного тестирования.

Основные компоненты DAK включают:

- dak: Основная утилита для управления архивом, предоставляет множество
  подкоманд для выполнения различных задач.

- dinstall: Скрипт, который отвечает за обработку новых загрузок пакетов и их
  добавление в архив.

- katie: Подсистема для выполнения проверок и валидации пакетов.

- ftp-master: Серверная часть, которая управляет основными операциями по
  загрузке и публикации пакетов.

DAK - это критически важный инструмент для поддержания и управления архивом
пакетов Debian, обеспечивающий высокое качество и целостность дистрибутива.


--- Debian изменения и upstream
Пакеты для Debian могут содержать изменения, которые специфичны для Debian и
могут отличаться от оригинального (upstream) кода. Эти изменения могут включать
патчи для исправления ошибок, улучшения безопасности, адаптации под специфику
Debian или добавления функциональности, которая считается полезной для
пользователей Debian.

Разработчики Debian поддерживают свои пакеты и могут вносить в них доработки для
лучшей интеграции с системой, соответствия стандартам Debian или для решения
специфических проблем, которые могут возникнуть в дистрибутиве. Такие изменения
могут не быть включены в upstream-версию пакета и могут быть специфичны только
для Debian.


--- Частота обновления кода из upstream
Частота экспорта исходного кода из upstream (исходного проекта) в сам пакет
Debian может варьироваться в зависимости от нескольких факторов, включая
активность разработчиков, наличие обновлений в upstream, важность и критичность
этих обновлений, а также релизный цикл самого Debian.

В общем, процесс обновления пакетов в Debian включает несколько этапов:

1. Обновление исходного кода: Разработчики Debian следят за обновлениями в
upstream и импортируют новые версии исходного кода по мере их выхода. Это может
происходить часто, особенно для активно разрабатываемых проектов.

2. Проверка и тестирование: После импорта новой версии исходного кода, пакет
должен быть тщательно проверен и протестирован, чтобы убедиться, что он работает
корректно и не нарушает других частей системы.

3. Загрузка в репозиторий: После успешного тестирования, пакет загружается
в unstable ветку Debian (также известную как Sid). Затем, после периода
тестирования и устранения ошибок, пакет может быть перемещен в testing ветку,
и, в конечном итоге, в stable ветку.

4. Релизы Debian: Debian имеет свой релизный цикл, который влияет на частоту
обновлений пакетов. Stable релизы выходят примерно раз в 2 года, тогда как
обновления в unstable и testing ветках происходят гораздо чаще.

Для активно развивающихся пакетов обновления из upstream могут происходить
несколько раз в год или даже чаще. Для менее активных пакетов обновления могут
быть более редкими.

Резюмируя, частота экспорта исходного кода из upstream в сам пакет Debian
зависит от динамики развития исходного проекта и релизного цикла Debian.


--- Debian и запад
Debian - это дистрибутив операционной системы Linux, который разрабатывается
сообществом и поддерживается волонтерами со всего мира. Хотя он был основан в
США, его разработка и использование распространены по всему миру. Таким образом,
его нельзя однозначно отнести к "западной" или "восточной" операционной системе,
так как это проект, который объединяет людей из различных стран и культур.
Debian также известен своей стабильностью, надежностью и свободным программным
обеспечением.


--- Количество
Точное количество людей, работающих над Debian, может варьироваться, так как
проект является полностью открытым и добровольным. В Debian участвуют как
официальные разработчики, так и множество добровольцев со всего мира. По
состоянию на 2023 год, в проекте участвует более 1000 официальных разработчиков,
но если учитывать всех участников, включая тех, кто вносит свой вклад в виде
пакетов, документации, тестирования и поддержки, то общее количество людей может
быть значительно выше.

Дистрибутив Debian состоит из огромного числа пакетов (в настоящее время около
30000 пакетов с исходным кодом).


--- Предложенные патчи для upstream
Появилась необходимость передать свои патчи в upstream.

1. Качество патча
Патч должен быть хорошо написан, протестирован и документирован.

2. Спрос и полезность
Разработчики рассмотрят, насколько полезной будет эта функциональность для
широкой аудитории.

3. Совместимость и поддержка
Патч не должен ломать существующий функционал или мешать текущим пользователям.

4. Обратная связь от сообщества
Если вы представите патч и получите положительные отзывы от сообщества
пользователей, это может положительно повлиять на решение разработчиков.

Им это нужно будет? Это зависит от того, насколько разработчики и сообщество ПО
сочтут ваш патч полезным и востребованным. Чтобы узнать об их интересе, можно
сначала обсудить идею на форумах или в списках рассылки проекта.


--- Debian vs Ubuntu
Это две популярные операционные системы на основе Linux, но у них есть некоторые
различия и особенности:

1. Происхождение и разработка:
   - Debian: Это проект, ориентированный на сообщество, который существует с
     1993 года. Debian известен своей стабильностью и строгим циклом выпуска
     обновлений, что делает его подходящим для серверов и критически важных систем.
   - Ubuntu: Это дистрибутив, основанный на Debian, созданный компанией
     Canonical в 2004 году. Ubuntu имеет более частые выпуски и ориентирован на
     удобство использования как для настольных компьютеров, так и для серверов.
     Ubuntu является проектом с открытым исходным кодом.

2. Цикл выпуска:
   - Debian: Имеет три основных ветки: стабильная (stable), тестируемая
     (testing), и нестабильная (unstable). Стабильная версия обновляется реже,
     но считается более надежной.
   - Ubuntu: Выпускает новые версии каждые шесть месяцев. Также есть версии с
     долгосрочной поддержкой (LTS), которые обновляются каждые два года и
     поддерживаются в течение пяти лет.

3. Поддержка и сообщество:
   - Debian: Полностью управляется сообществом, с акцентом на свободу и
     открытость кода.
   - Ubuntu: Поддерживается Canonical, которая предлагает профессиональную
     поддержку и услуги. Сообщество Ubuntu также активно и предоставляет много
     ресурсов для пользователей.

4. Пакетный менеджмент:
   - Оба дистрибутива используют пакетный менеджер APT и формат пакетов .deb, но
     в Ubuntu могут быть включены более новые версии программ из-за более
     быстрого цикла разработки.

5. Целевые пользователи:
   - Debian: Часто выбирается пользователями и администраторами, которые ценят
     стабильность и безопасность.
   - Ubuntu: Популярен среди новичков и тех, кто ищет более удобный и
     дружественный интерфейс с активной поддержкой и документацией.

Хотя Canonical, компания, стоящая за Ubuntu, предоставляет коммерческую
поддержку и предлагает некоторые платные сервисы, сама операционная система
остается свободной и открытой. Что за сервисы?

1. Ubuntu Advantage: Подписка на корпоративную поддержку, которая включает
техническую поддержку, управление патчами и обновлениями, а также доступ к
инструментам для управления инфраструктурой.

2. Landscape: Инструмент для управления и мониторинга большого количества
серверов и рабочих станций на базе Ubuntu, доступный как часть Ubuntu Advantage.

3. Livepatch Service: Сервис, позволяющий применять критические обновления ядра
Linux без перезагрузки системы, что важно для серверов и критически важных
систем.

Эти сервисы предназначены для организаций и предприятий, которым требуется
высокая надежность и поддержка.


--- Debian installer
Debian Gnu/Linux installer menu (BIOS mode) - это меню, которое появляется при
запуске установочного образа Debian на компьютере с BIOS (или в режиме
совместимости с BIOS, если используется UEFI). Это меню позволяет пользователю
выбрать различные опции установки и запуска.

Он находится на самом установочном ISO-образе Debian. Когда вы создаете
загрузочный носитель (например, USB накопитель или DVD) с этим образом,
установщик становится доступным для запуска на компьютере. Установщик включает
в себя все необходимые компоненты и программы для выполнения установки
операционной системы на ваш диск.

Debian Installer, как часть процесса, обеспечивает распаковку и установку
пакетов, настройку системы, создание учетных записей, настройку загрузчика
(включая GRUB), разметка диска, настройка сети и другие критически важные шаги
для успешной установки операционной системы.

Debian Installer включается в установочный ISO-образ разработчиками
и поддерживающими проект сообществом Debian.
