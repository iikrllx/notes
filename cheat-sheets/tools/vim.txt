https://github.com/iikrllx/dotfiles-debian/blob/master/.vimrc

Темы:
* Команды
* Режимы
* Замена
* Прыжки
* Удаление
* Дополнительно
* Ввод, копирование, вставка
* Передвижение по строкам
* Окна
* vimrc
* Поиск
* Автоматическое выравнивание
* Как работать с деревом без nerdtree
* addon


--- Команды
:q               выйти
:w               перезаписать
:w new           перезапись файла с новым названием
:wq              перезаписать и выйти
:e               редактировать
:e!              вернуть все до последнего сохраненного состояния
:n new           редактирование следующего файла
:buffers         кол-во редактируемых файлов
:buffer file1    переключиться к файлу
:r file1         вставка файла в другой файл


--- Режимы
esc              выйти из режима
i                режим вставки (написания текста)
v                режим визуализации
shift + :        командный режим
shift + z        два раза (выйти из vim)
ZZ               сохранить и выйти из vim


--- Замена
r + символ       замена символа
shift + r        замена нескольких символов


--- Прыжки
A                в конец строки с вставкой
I                в начало строки с вставкой

shift + $        в конец строки в командном режиме
0                в начало строки в командном режиме
shift + 0        переход к другому абзацу

gg               к первой строке в файле
shift + g        к последней строке в файле
H                к первой строке
L                к последней строке

shift + {        вверх по пустым строкам
shift + }        вниз по пустым строкам
e                на слово вперед
b                на слово назад


--- Удаление
x                удалить символ, с начала строки
X                удалить символ, с конца строки
4x               удалить 4 символа
dd               вырезать строку или удалить
3dd              удалить 3 строки
D                удалить от начала курсора до конца строки
dG               удалить весь текст от начала курсора


--- Дополнительно
u                откат действий
.                противоположное откату
/                глобальный поиск, ENTER, n переключение по словам
ctrl + e         вниз (скролл)
ctrl + y         вверх (скролл)
caps lock + K    откроется man


--- Ввод, копирование, вставка
o                новая строка с режимом ввода (ниже)
O                новая строка с режимом ввода (выше)
p                вставка текста
yy               скопирует текущую строку
2yy              скопирует две строки
J                объединяет строки


--- Передвижение по строкам
k вверх
j вниз
l вправо
h влево


--- Окна
ctrl + w + n         разбить на два окна (горизонтально)
ctrl + w + v         разбить на два окна (вертикально)
ctrl + w + h/j/k/l   переключение между окнами
ctrl + w (два раза)  переключение между окнами - последовательно
ctrl + ^             вернутся к прошлому файлу


--- vimrc
Для того чтобы не настривать vim при каждом запуске, можно настроить
файл запуска `~/.vimrc`

Установка плагинов - https://github.com/junegunn/vim-plug

В терминале:
$ curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

:PlugClean удаляет ненужные плагины
:PlugInstall устанавливает плагины

m - modes с помощью NERDTree (в самом дереве каталогов)
r - refresh (в самом дереве каталогов)

В `~/.vimrc` можно прописать конкретную версию плагина для установки:
call plug#begin('~/.vim/plugged')
Plug 'lervag/vimtex', { 'tag': 'v2.16' }
call plug#end()


--- Поиск
$ grep -R 'malloc' .
`ctrl + f` в режиме ввода, появится окно с историей и скролом.

В режиме ввода (insert) можно нажать `ctrl + n` и появится меню
со списком используемых слов.


--- Автоматическое выравнивание
shift + >>
shift + <<

Можно выравнить все:
gg + = + shift + g

Или выделить определенный абзац кода и сделать `shift + (стрелки)`


--- Как работать с деревом БЕЗ nerdtree
Можно использовать `netrw`:
:Ex
:Ve

:vs file
:sp file

:tabnew


--- addon
В контексте Vim, "addon" обычно относится к плагинам или расширениям, которые
добавляют новые функции или улучшают существующие возможности редактора. Плагины
могут делать всё, от изменения интерфейса до добавления новых языков
программирования или улучшения поддержки уже существующих.

"Addon-manager" — это инструмент или плагин, который помогает управлять другими
плагинами в Vim. Он упрощает установку, обновление и удаление плагинов. С
помощью менеджера можно быстро добавлять новые функции в Vim без необходимости
вручную редактировать файлы конфигурации. Примеры популярных менеджеров плагинов
для Vim включают Pathogen, Vundle и vim-plug.

Можно вывести все загруженные инструменты:
:scriptnames
Выводит список всех загруженных в текущей сессии скриптов и их полных путей.
